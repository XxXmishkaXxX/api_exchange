version: "3.8"

networks:
  exchange:

services:
  auth_db:
    image: postgres:15
    container_name: auth_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - exchange

  orders_db:
    image: postgres:15
    container_name: orders_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${ORDERS_DB_NAME}
      POSTGRES_USER: ${ORDERS_DB_USER}
      POSTGRES_PASSWORD: ${ORDERS_DB_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - orders_postgres_data:/var/lib/postgresql/data
    networks:
      - exchange
  
  md_db:
    image: postgres:15
    container_name: md_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${MD_DB_NAME}
      POSTGRES_USER: ${MD_DB_USER}
      POSTGRES_PASSWORD: ${MD_DB_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - md_postgres_data:/var/lib/postgresql/data
    networks:
      - exchange

  wallet_db:
    image: postgres:15
    container_name: wallet_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${WALLET_DB_NAME}
      POSTGRES_USER: ${WALLET_DB_USER}
      POSTGRES_PASSWORD: ${WALLET_DB_PASSWORD}
    ports:
      - "5436:5432"
    volumes:
      - wallet_postgres_data:/var/lib/postgresql/data
    networks:
      - exchange

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - auth_db
      - orders_db
      - md_db
      - wallet_db
    networks:
      - exchange

  auth_service:
    build:
      context: ./services/auth_service
    container_name: auth_service
    restart: always
    env_file:
      - ./services/auth_service/.env
    depends_on:
      - auth_db
      - kafka
    ports:
      - "8001:8001"
    volumes:
      - ./services/auth_service:/auth_service
    entrypoint: ["/auth_service/entrypoint.sh"]
    networks:
      - exchange

  wallet_service:
    build:
      context: ./services/wallet_service
    container_name: wallet_service
    restart: always
    env_file:
      - ./services/wallet_service/.env
    depends_on:
      - wallet_db
      - kafka
      - redis_wallets    
    ports:
      - "8002:8002"
    volumes:
     - ./services/wallet_service:/wallet_service
    entrypoint: ["/wallet_service/entrypoint.sh"]
    networks:
      - exchange

  orders_service:
    build:
      context: ./services/orders_service
    container_name: orders_service
    restart: always
    env_file:
      - ./services/orders_service/.env
    depends_on:
      - orders_db
      - kafka
      - redis_orders
    ports:
      - "8003:8003"
    volumes:
      - ./services/orders_service:/orders_service
    entrypoint: ["/orders_service/entrypoint.sh"]
    networks:
      - exchange
  
  matching_engine_service:
    build:
      context: ./services/matching_engine
    container_name: ME
    restart: always
    ports:
      - "8004:8004"
    depends_on:
      - kafka
      - redis_me
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./services/matching_engine:/app
    networks:
      - exchange

  market_data_service:
    build:
      context: ./services/market_data_service
    container_name: market_data_service
    restart: always
    env_file:
      - ./services/market_data_service/.env
    depends_on:
      - md_db
      - kafka
    ports:
      - "8005:8005"
    volumes:
      - ./services/market_data_service:/market_data_service
    entrypoint: ["/market_data_service/entrypoint.sh"]
    networks:
      - exchange
  
      
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - exchange

  kafka:
    image: wurstmeister/kafka
    env_file:
      - .env
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - exchange

  redis_orders:
    image: redis:alpine
    container_name: redis_orders
    restart: always
    ports:
      - "6378:6379"
    networks:
      - exchange

  redis_wallets:
    image: redis:alpine
    container_name: redis_wallets
    restart: always
    ports:
      - "6377:6379"
    networks:
      - exchange

  redis_me:
    image: redis:alpine
    container_name: redis_me
    restart: always
    ports:
      - "6376:6379"
    networks:
      - exchange

  nginx:
    build:
      context: ./nginx
    container_name: nginx_proxy
    ports:
      - "80:80"
    networks:
    - exchange


volumes:
  auth_postgres_data:
  orders_postgres_data:
  md_postgres_data:
  wallet_postgres_data:
